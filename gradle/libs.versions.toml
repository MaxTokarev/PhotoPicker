[versions]
kotlin-general = "1.9.21" # https://kotlinlang.org/docs/releases.html#release-details
kotlin-immutable-collections = "0.3.5" # https://github.com/Kotlin/kotlinx.collections.immutable/releases
kotlinx = "1.7.2" # https://github.com/Kotlin/kotlinx.coroutines/releases
ksp = "1.9.21-1.0.16" # https://github.com/google/ksp/releases
android-gradle = "8.0.2" # https://developer.android.com/studio/releases/gradle-plugin
compose = "1.6.0" # https://developer.android.com/jetpack/androidx/releases/compose#versions
compose-compiler = "1.3.2" # https://developer.android.com/jetpack/androidx/releases/compose#versions
compose-accompanist = "0.30.1" # https://github.com/google/accompanist/releases
compose-constraint = "1.0.1" # https://developer.android.com/jetpack/compose/layouts/constraintlayout
compose-navigation = "2.7.6" # https://developer.android.com/jetpack/compose/navigation
compose-paging = "3.2.1" # https://developer.android.com/jetpack/androidx/releases/paging
serialization-json = "1.6.2" # https://github.com/Kotlin/kotlinx.serialization/releases
dagger = "2.46.1" # https://github.com/google/dagger/releases
timber = "5.0.1" # https://github.com/JakeWharton/timber/releases
timber-treessence = "1.0.5" # https://github.com/bastienpaulfr/Treessence/tags
sentry-runtime = "6.10.0" # https://github.com/getsentry/sentry-java/releases
cicerone = "7.1" # https://github.com/terrakok/Cicerone/releases
ktx = "1.12.0" # https://developer.android.com/jetpack/androidx/releases/core
ktx-fragment = "1.6.2" # https://developer.android.com/jetpack/androidx/releases/fragment
ktx-activity = "1.8.2" # https://developer.android.com/jetpack/androidx/releases/activity
ktx-testing = "1.1.5" # https://developer.android.com/jetpack/androidx/releases/test
lifecycle = "2.7.0" # https://developer.android.com/jetpack/androidx/releases/lifecycle
# https://github.com/vigna/fastutil/issues/136
material = "1.11.0" # https://github.com/material-components/material-components-android/releases
annotations = "1.7.1" # https://developer.android.com/jetpack/androidx/releases/annotation
appcompat = "1.6.1" # https://developer.android.com/jetpack/androidx/releases/appcompat
datastore = "1.0.0" # https://developer.android.com/topic/libraries/architecture/datastore
# https://github.com/vsch/flexmark-java/issues/442
ktor = "2.3.4" # https://ktor.io/
apache-compress = "1.23.0" # https://commons.apache.org/proper/commons-compress/
apache-codec = "1.15" # https://mvnrepository.com/artifact/commons-codec/commons-codec
work = "2.9.0" # https://developer.android.com/jetpack/androidx/releases/work
coil = "2.4.0" # https://github.com/coil-kt/coil/releases
splashscreen = "1.0.1"
mvi = "3.2.1" # https://github.com/arkivanov/MVIKotlin/releases
constraint = "2.1.4"
view-binding-property-delegate = "1.5.9"
sql-delight = "2.0.0-rc01"
orbit = "6.0.0"
dependency-analysis = "1.20.0"
ktorfit = "1.11.1"
glide = "4.16.0"
modules-graph = "0.10"

# Testing
junit = "5.8.2"
mockito = "4.1.0"
roboelectric = "4.10.3"
mockk = "1.13.5"
kaspresso = "1.5.2"

# Linters
detekt = "1.23.0" # https://detekt.dev/docs/gettingstarted/gradle/
detekt-ruleset-compiler = "0.0.4" # https://github.com/BraisGabin/detekt-compiler-rules/releases
detekt-ruleset-ktlint = "0.48.0" # https://github.com/pinterest/ktlint/releases
detekt-ruleset-twitter-compose = "0.0.26" # https://github.com/twitter/compose-rules/releases

[libraries]
# Gradle - Core
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
kotlin-ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

kotlin-annotation-processing = { module = "org.jetbrains.kotlin:kotlin-annotation-processing-embeddable", version.ref = "kotlin-general" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin-general" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-general" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-general" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin-general" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx" }
kotlin-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }

kotlin-serialization-gradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-general" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization-json" }

kotlin-immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-immutable-collections" }

datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }

# Linters
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-ruleset-compiler = { module = "com.braisgabin.detekt:kotlin-compiler-wrapper", version.ref = "detekt-ruleset-compiler" }
detekt-ruleset-ktlint = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-ruleset-twitter-compose = { module = "com.twitter.compose.rules:detekt", version.ref = "detekt-ruleset-twitter-compose" }

# MVI
mvi-core = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvi" }
mvi-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvi" }
mvi-logging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mvi" }
mvi-timetravel = { module = "com.arkivanov.mvikotlin:mvikotlin-timetravel", version.ref = "mvi" }
mvi-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mvi" }
orbit-core = { module = "org.orbit-mvi:orbit-core", version.ref = "orbit" }
orbit-viewmodel = { module = "org.orbit-mvi:orbit-viewmodel", version.ref = "orbit" }
orbit-test = { module = "org.orbit-mvi:orbit-test", version.ref = "orbit" }

# UI
material = { module = "com.google.android.material:material", version.ref = "material" }
constraint = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraint" }
view-binding-delegate = { module = "com.github.kirich1409:viewbindingpropertydelegate-noreflection", version.ref = "view-binding-property-delegate" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "ktx-activity" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }

# UI - Compose Extension
compose-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "compose-accompanist" }
compose-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "compose-accompanist" }
compose-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "compose-accompanist" }
compose-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "compose-accompanist" }
compose-placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "compose-accompanist" }
compose-swipetorefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "compose-accompanist" }
compose-constraint = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraint" }
compose-coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "compose-paging" }

# Storage
sql-delight = { module = "app.cash.sqldelight:android-driver", version.ref = "sql-delight" }
sql-delight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sql-delight" }
sql-delight-test = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sql-delight" }

# Dependency Injection
hilt = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
hilt-kapt = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }
hilt-gradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "dagger" }

# Navigation
cicerone = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-navigation-material = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "compose-accompanist" }

# Bug report dependencies
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
timber-tressence = { module = "com.github.bastienpaulfr:Treessence", version.ref = "timber-treessence" }

# KTX
ktx = { module = "androidx.core:core-ktx", version.ref = "ktx" }
ktx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "ktx-fragment" }
ktx-activity = { module = "androidx.activity:activity-ktx", version.ref = "ktx-activity" }
ktx-testing = { module = "androidx.test.ext:junit", version.ref = "ktx-testing" }

# Lifecycle
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
lifecycle-kapt = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycle" }
lifecycle-test = { module = "androidx.lifecycle:lifecycle-runtime-testing", version.ref = "lifecycle" }

# Utils
annotations = { module = "androidx.annotation:annotation", version.ref = "annotations" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

# Ktor
ktor-client = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }

# Apache commons
apache-compress = { module = "org.apache.commons:commons-compress", version.ref = "apache-compress" }
apache-codec = { module = "commons-codec:commons-codec", version.ref = "apache-codec" }

# Testing
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }
roboelectric = { module = "org.robolectric:robolectric", version.ref = "roboelectric" }
kaspresso = { module = "com.kaspersky.android-components:kaspresso", version.ref = "kaspresso" }
hilt-test = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }
hilt-test-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }
android-test-core = { module = "androidx.test:core", version = "1.5.0" }
android-test-runner = { module = "androidx.test:runner", version = "1.5.2" }
android-test-rules = { module = "androidx.test:rules", version = "1.5.0" }
android-test-junit = { module = "androidx.test.ext:junit", version = "1.1.5" }

# Work manager
work-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

# Dependency Analyzer
dependency-analysis-gradle = { module = "com.autonomousapps:dependency-analysis-gradle-plugin", version.ref = "dependency-analysis" }


[plugins]
android-app = { id = "com.android.application", version.ref = "android-gradle" }
android-lib = { id = "com.android.library", version.ref = "android-gradle" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin-general" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-general" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
sql-delight = { id = "app.cash.sqldelight", version.ref = "sql-delight" }
modules-graph = { id = "com.savvasdalkitsis.module-dependency-graph", version.ref = "modules-graph" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
